x-blackhole: &blackhole
  build: 
    context: .
    dockerfile: Dockerfile.blackhole-ui
#  image: ghcr.io/westsurname/scripts/blackhole:latest
  pull_policy: always
  user: "${PUID:-}${PGID:+:${PGID}}"
  env_file:
    - .env
  restart: unless-stopped

services:
  blackhole:
    <<: *blackhole
    container_name: blackhole-ui
    volumes:
      - ${REALDEBRID_MOUNT_TORRENTS_PATH:-${BLACKHOLE_RD_MOUNT_TORRENTS_PATH:-/dev/null}}:${REALDEBRID_MOUNT_TORRENTS_PATH:-${BLACKHOLE_RD_MOUNT_TORRENTS_PATH:-/dev/null}}
      - ${TORBOX_MOUNT_TORRENTS_PATH:-/dev/null}:${TORBOX_MOUNT_TORRENTS_PATH:-/dev/null}
      - ${BLACKHOLE_BASE_WATCH_PATH}/${BLACKHOLE_SONARR_PATH}:/${BLACKHOLE_BASE_WATCH_PATH}/${BLACKHOLE_SONARR_PATH}
      - ${BLACKHOLE_BASE_WATCH_PATH}/${BLACKHOLE_RADARR_PATH}:/${BLACKHOLE_BASE_WATCH_PATH}/${BLACKHOLE_RADARR_PATH}
    environment:
      - BLACKHOLE_BASE_WATCH_PATH=${BLACKHOLE_BASE_WATCH_PATH}
    restart: unless-stopped
    labels:
      com.github.saltbox.saltbox_managed: true 
      traefik.enable: true 
      traefik.http.routers.blackhole-http.entrypoints: web 
      traefik.http.routers.blackhole-http.middlewares: globalHeaders@file,redirect-to-https@docker,robotHeaders@file,cloudflarewarp@docker 
      traefik.http.routers.blackhole-http.rule: Host(`blackhole.davyjones.media`) 
      traefik.http.routers.blackhole-http.service: blackhole 
      traefik.http.routers.blackhole.entrypoints: websecure 
      traefik.http.routers.blackhole.middlewares: globalHeaders@file,secureHeaders@file,robotHeaders@file,cloudflarewarp@docker 
      traefik.http.routers.blackhole.rule: Host(`blackhole.davyjones.media`) 
      traefik.http.routers.blackhole.service: blackhole 
      traefik.http.routers.blackhole.tls.certresolver: cfdns 
      traefik.http.routers.blackhole.tls.options: securetls@file 
      traefik.http.services.blackhole.loadbalancer.server.port: 8000
    profiles: [blackhole-ui]

networks:
  default:
    name: ${DOCKER_NETWORK:-scripts_default}
    external: ${DOCKER_NETWORK_EXTERNAL:-false}